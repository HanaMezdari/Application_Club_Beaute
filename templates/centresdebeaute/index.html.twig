{% extends 'base.html.twig' %}

{% block title %} Centres de beaute{% endblock %}

{% block body %}
 <header>
       
<div class="content-width" >
  <div class="slideshow" >
    <!-- Slideshow Items -->
    <div class="slideshow-items">
    {% for item in publicite %}
      <div class="item">
        <div class="item-image-container">
          <img class="item-image" src="/css/slide/{{ item.image }}" alt="image" style="height: 600px;width: 100%;" />
        </div>
        <!-- Staggered Header Elements -->
        <div class="item-header">
          <span class="vertical-part"><b>Bienvenu :<em style="color:#8c0c3c;">{{ item.nom }}</b></span>
        </div>
        <!-- Staggered Description Elements -->
        <div class="item-description">
          <span class="vertical-part">
             <a href="{{ path('services') }}" style="color:#fff;" ><b>{{ item.description }}</b> </a> 
          </span>
          
        </div> 
        <div class="controls">
      <ul>
        <li class="control" data-index="0"></li>
        <li class="control" data-index="1"></li>
        <li class="control" data-index="2"></li>
        <li class="control" data-index="3"></li>
      </ul>
    </div>
      </div>
    {% endfor %}
    </div>
  </div>
</div>
  
 
<style>
  

.content-width {
  width: 100%;
  height: 90vh;
  margin-bottom:40px;
  
}

.slideshow {
  position: relative;
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  
  
}

.slideshow-items {
  position: relative;
  width: 100%;
  height: 100vh;
}

.item {
  position: absolute;
  width: 100%;
  height: auto;
}

.item-image-container {
  position: relative;
  width: 100%;
  height:100vh;
}

.item-image-container::before {
  content: '';
  position: absolute;
  top: -1px;
  left: 0;
  width: 101%;
  height: 90vh;
  background: #22222A;
  opacity: 0;
 
}

.item-image {
  position: relative;
  width: 100%;
  height: 100%;
  opacity: 0;
  display: block;
  /* transition: property name | duration | timing-function | delay  */
  transition: opacity .3s ease-out .45s;
  margin-top:50px; 
}

.item.active .item-image {
  opacity: 1;
}

.item.active .item-image-container::before {
  opacity: .0;
}

.item-description {
  position: absolute;
  top: 50vh;
  left: 1.8%;
  width: 50%;
  color:#fff;
  padding-right: 4%;
  line-height: 1.8;
  font-family: 'Exo 2', sans-serif;
}

/* Staggered Vertical Items ------------------------------------------------------*/
.item-header {
  position: absolute;
  top: 40vh;
  left: 1.8%;
  font-family: 'Montserrat', sans-serif;
}

.item-header .vertical-part {
  margin: 0 -4px;
  font-family: 'Montserrat', sans-serif;
  -webkit-font-smoothing: auto;
  font-size: 2vw;
  color: #fff;
}
@media (max-width:600px){
.item-header .vertical-part {
font-size:3vw;
}
.content-width{
height:50vh;
}
.slideshow {
  position: relative;
  width: 100%;
  min-height: 50vh;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}

.slideshow-items {
  min-height: 60vh;
}
.item-image-container {
  height:60vh;
}

.item-image-container::before {
  height: 60vh;
}
.item-description {
  position: absolute;
  top: 40vh;
  width: 90%;
  font-size:14px;
}
.item-header {
  position: absolute;
  top: 30vh;
}
}
.vertical-part {
  overflow: hidden;
  display: inline-block;
}

.vertical-part b {
  display: inline-block;
  transform: translateY(100%);
}

.item-header .vertical-part b {
  transition: .5s;
}

.item-description .vertical-part b {
  transition: .21s;
}

.item.active .item-header .vertical-part b {
  transform: translateY(0);
}

.item.active .item-description .vertical-part b {
  transform: translateY(0);
}

/* Controls ----------------------------------------------------------------------*/
.controls {
  position: relative;
  text-align: right;
  display:block;
}

.controls ul {
  list-style: none;
  float:left;
}

.controls ul li {
  display: inline-block;
  width: 10px;
  height: 10px;
  margin: 3px;
  background:#bdbdd5;;
  cursor: pointer;
}

.controls ul li.active {
  background:#6a6a77;;
}


@media (max-width:600px){
.controls ul {
  list-style: none;
  position:absolute;
  
}
}


</style>
<script>

    const items = document.querySelectorAll('.item'),
controls = document.querySelectorAll('.control'),
headerItems = document.querySelectorAll('.item-header'),
descriptionItems = document.querySelectorAll('.item-description'),
activeDelay = .76,
interval = 5000;

let current = 0;

const slider = {
  init: () => {
    controls.forEach(control => control.addEventListener('click', e => {slider.clickedControl(e);}));
    controls[current].classList.add('active');
    items[current].classList.add('active');
  },
  nextSlide: () => {// Increment current slide and add active class
    slider.reset();
    if (current === items.length - 1) current = -1; // Check if current slide is last in array
    current++;
    controls[current].classList.add('active');
    items[current].classList.add('active');
    slider.transitionDelay(headerItems);
    slider.transitionDelay(descriptionItems);
  },
  clickedControl: e => {// Add active class to clicked control and corresponding slide
    slider.reset();
    clearInterval(intervalF);

    const control = e.target,
    dataIndex = Number(control.dataset.index);

    control.classList.add('active');
    items.forEach((item, index) => {
      if (index === dataIndex) {// Add active class to corresponding slide
        item.classList.add('active');
      }
    });
    current = dataIndex; // Update current slide
    slider.transitionDelay(headerItems);
    slider.transitionDelay(descriptionItems);
    intervalF = setInterval(slider.nextSlide, interval); // Fire that bad boi back up
  },
  reset: () => {// Remove active classes
    items.forEach(item => item.classList.remove('active'));
    controls.forEach(control => control.classList.remove('active'));
  },
  transitionDelay: items => {// Set incrementing css transition-delay for .item-header & .item-description, .vertical-part, b elements
    let seconds;

    items.forEach(item => {
      const children = item.childNodes; // .vertical-part(s)
      let count = 1,
      delay;

      item.classList.value === 'item-header' ? seconds = .015 : seconds = .007;

      children.forEach(child => {// iterate through .vertical-part(s) and style b element
        if (child.classList) {
          item.parentNode.classList.contains('active') ? delay = count * seconds + activeDelay : delay = count * seconds;
          child.firstElementChild.style.transitionDelay = `${delay}s`; // b element
          count++;
        }
      });
    });
  } };


let intervalF = setInterval(slider.nextSlide, interval);
slider.init();
</script>
 
 </header> 
 <section>
 <h3>Choisir votre destination préférée chez nos centres de beauté :</h3>
  <div class="container-fluid" >
    
     <div class="row">
        <div class="column col-lg-4 col-md-8 col-sm-12" style="float:right;" >
  
 <div id="maCarte" ></div>
   </div>

 <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
crossorigin=""></script>
<script>
   var carte = L.map('maCarte').setView([36.8064835, 10.1815426], 15);
       
       // On charge les "tuiles"
       L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
           // Il est toujours bien de laisser le lien vers la source des données
           attribution: 'données © <a href="//osm.org/copyright">OpenStreetMap</a>/ODbL - rendu <a href="//openstreetmap.fr">OSM France</a>',
           minZoom: 1,
           maxZoom: 20
       }).addTo(carte);

       {% for item in centresdebeaute %}  
           // On crée le marqueur et on lui attribue une popup
           var marqueur = L.marker([{{ item.lat }}, {{ item.lon }}]).addTo(carte); //.addTo(carte);
           marqueur.bindPopup("<h6>{{ item.nom }}</h6>");

       {% endfor %}
</script>
  <div class="column col-lg-8 col-md-10 col-sm-12" style="float:left;" >  
     {% for item in centresdebeaute %}
  <div class="cardcontainer-fluid">
     <div class="row">               
      <div class="column col-lg-4 col-md-6 col-sm-12"> 
      
       <div class="card">
        <img src="/centre/{{ item.image }}" alt="image">
        <div class="con-text">
            <h3>{{ item.nom }}</h3>
            <p>{{ item.email }}</p> 
            <a class="btn btn-light " href="{{ item.url }}" role="button">Band Annonce</a>   
        </div>
     </div>
      
    </div>
    <div class="column col-lg-4 col-md-6 col-sm-12"> 
       
       <div class="content">
           <br>
           <h3 style="color:rgb(14, 13, 13);">{{ item.nom }}</h3><br>
           <h6 style="color:rgb(14, 13, 13);">{{ item.description }}</h6>
       </div>
       
    </div>
    
    <div class="column col-lg-4 col-md-6 col-sm-12">
        
       <div class="detail">
            <br><br>
            <h6 style="color:rgb(14, 13, 13);">Adresse : {{ item.adresse }}</h6><br>
            <h6 style="color:rgb(14, 13, 13);">Email : {{ item.email }}</h6><br>
            
              <a href="{{ path('centresdebeaute_show', {'id':item.id } ) }}" class="btn btn-secondary "style="float:right;box-shadow: 0px 5px 5px 3px rgba(0, 0, 0, 0.3);">Prendre RDV ! </a> 
             
       </div>
    </div>
   </div> 
   <hr>
  </div> 
   {% endfor %}
 </div>
 </div>
 </div>
</section>

<style>
h3 {
  margin-bottom:40px; 
  font-family: 'Playfair Display', serif;
  color: white;
  font-size:40px;
  text-shadow: 3px 4px 0 rgba(0,0,0,0.2);
}  
.cardcontainer
{
  max-width: 1300px;
 
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}
.card {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 80%;
    height: 220px;
    background: #000;
    border-radius: 30px;
     margin-top:10px;
    overflow: hidden;
    cursor: pointer;
    transition: all 0.5s ease;
    backface-visibility: hidden;
    box-shadow: 0px 10px 10px 3px rgba(0, 0, 0, 0.3);
}
.card:hover {
    transform: scale(0.9);
}

.card:hover .con-text p {
    margin-bottom: 0;
    opacity: 1;
    transition: all 0.5s ease;
}
.card img {
    position: absolute;
    width: 100%;
    height:100%;
    z-index: 10;
    transition: all 0.5s ease;
}
.card .con-text {
    position: absolute;
    z-index: 30;
    bottom: 0;
    color: #fff;
    padding: 20px;
    padding-bottom: 30px;
    width:90%;
    background: linear-gradient(280deg, rgba(0,0,0,0) 0%, rgba(0,0,0,0.9) 100%);
}
.card .con-text p {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    font-size: 15px;
    opacity: 0;
    margin-bottom: -400px;
    transition: all 0.5s ease;
}
.card .con-text p a {
    padding: 7px 17px;
    border-radius: 12px;
    background: transparent;
    border: 2px solid #fff;
    color: #fff;
    margin-top: 10px;
    margin-left: auto;
    cursor: pointer;
    transition: all 0.5s ease;
    font-family: poppins;
    font-size: 1.5rem;
    outline: none;
}
.card .con-text p button:hover {
    background: #fff;
    color: #000;
}

.img {
    position: absolute;
    width: 100%;
}
</style>


{% endblock %}
